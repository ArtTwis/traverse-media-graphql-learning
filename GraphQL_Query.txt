# {
#   client(id: "1"){
#     id,
#     name,
#     email,
#     phone
#   }
# }

# {
# 	project(id: "62e6f3647eb28a81e9597d25"){
#     id,
#     clientId,
#     name
#   }
# }

# {
#   clients {
#     name,
#     email,
#     phone
#   }
# }

# {
#   projects {
#     id,
#     name,
#     description,
#     status,
#     clientId,
#     client {
#       name,
#       email,
#       phone
#     }
#   }
# }

# mutation {
  # addClient(name:"Test", email: "test@gmail.com", phone: "+91-XXXXXXXXXX"){
  #   id
  #   name
  #   email
  #   phone    
  # }
  
  # deleteClient(id:"62e6ee909b396e289495ce23"){
  #   name
  # }
  
#   addProject(name:"Test", description:"Test", status: new, clientId: "62e6e8243ad4fed0af4d390c") {
#     id
#     name
#     description
#     status
#     clientId
#   }
  
#   updateProject(id: "62e6f2517eb28a81e9597d20", name:"Truckstop", description:"It's a USA project to handle truck loads.", status: completed){
#     id
#     name
#     description
#     status
#     clientId
#     	client {
#       name,
#       email,
#       phone
#     }
#   }
# }



==================================================================================================================



# GraphQL Queries & Mutations

These are the GraphQL queries and mutations for the YouTube course.

## Get names of all clients
```
{
  clients {
    name
  }
}
```

## Get a single client name and email
```
{
  client(id: 1) {
    name
    email
  }
}
```

## Get name and status of all projects
```
{
  projects {
    name
    status
  }
}
```

## Get a single project name, description along with the client name and email
```
{
  project(id: 1) {
    name
    description,
    client {
      name
      email
    }
  }
}
```

## Create a new client and return all data
```
mutation {
  addClient(name: "Tony Stark", email: "ironman@gmail.com", phone: "955-365-3376") {
    id
    name
    email
    phone
  }
}
```

## Delete a client and return id
```
mutation {
  deleteClient(id: 1) {
    id
  }
}
```

## Create a new project and return name and description
```
mutation {
  addProject(name: "Mobile App", description: "This is the project description", status: "new", clientId: "1") {
   name
   description
  }
}
```

## Update a project status and return name and status
```
mutation {
  updateProject(status: "completed") {
   name
   status
  }
}
```
